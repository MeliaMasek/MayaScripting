                        //Calculator function

//Addition 1
global proc float Addition(float $num[])
{
        float $sum = 0;

    //$i = $index in this case
    for ($index = 0; $index < size($num); $index++)
    {
        $sum = $sum + $num[$index];
    }
    return $sum;   
}
Addition({10, 50, 1, 3});


//Subtraction 2
global proc float Subtraction(float $num[])
{
    float $dif = $num[0];

    //$i = $index in this case
    for ($index = 1; $index < size($num); $index++)
    {
        $dif = $dif - $num[$index];
    }
    return $dif;    
}
Subtraction({10, 5, 1});


//Multiplication 3
global proc float Multiplication(float $num[])
{
    float $multi = $num[0];

    //$i = $index in this case
    for ($index = 1; $index < size($num); $index++)
    {
        $multi = $multi * $num[$index];
    }
    return $multi;
}
Multiplication({2, 3, 7, 2});


//Division 4
global proc float Division(float $num[])
{
    float $div = $num[0];

    //$i = $index in this case
    for ($index = 1; $index < size($num); $index++)
    {
        $div = $div / $num[$index];
    }
    return $div;
}
Division({50, 5, 2});


//Power 5
global proc float Power(float $num[])
{
    float $powof = $num[0];

    //$i = $index in this case
    for ($index = 1; $index < size($num); $index++)
    {
        $powof = pow($powof, $num[$index]);
    }
    return $powof;    
}
Power({3, 3});


//Mean 6
global proc float Mean(float $num[])
{
    float $mean = 0;

    //$i = $index in this case
    for ($index = 0; $index < size($num); $index++)
    {
        $mean = ($mean + $num[$index]);
    }
    $mean = $mean / $index;
    return $mean;
}
Mean({10, 5, 5, 4});


//Median 7
global proc float Median(float $num[])
{
    float $med[] = (sort($num));
    //print (size($med) + "\n");

    //odds
    $test = fmod (size($med), 2);
    if ($test == 1)
    {
        $index = ((size($med) / 2));
        //print $med[$index];
        return $med[$index];
    }

    //even
    else
    {      
        //to get middle of evens
            $medA = (size($med)/2);
            //print ($medA);
                       
            $medB = ((size($med)/2) - 1);
            //print ($medB);

            $medEven = (($med[$medA] + $med[$medB]) / 2);
            //print $medEven;
            return ($medEven);
    }
}
Median({10, 20});

//Calls on all functions
{
global proc float Calculator(float $input[], int $operation)
{
    float $result;
    string $operationSymbol;

    //perform addition
    if ($operation == 1)
    {
        $result = Addition($input);
        $operationSymbol = " + ";
    }
    
    //perform subtraction
    else if ($operation == 2)
    {
        $result = Subtraction($input);
        $operationSymbol = " - ";
    }

    //perform multiplication
    else if ($operation == 3)
    {
        $result = Multiplication($input);
        $operationSymbol = " * ";
    }

    //perform division
    else if ($operation == 4)
    {
        $result = Division($input);
        $operationSymbol = " / ";
    }

    //perform power of
    else if ($operation == 5)
    {
        $result = Power($input);
        $operationSymbol = " ^ ";
    }
    
    //perform Mean
    else if ($operation == 6)
    {
        $result = Mean($input);
        $operationSymbol = ", ";
        //$sentence = "The mode of ";
    }

    //perform Median
    else if ($operation == 7)
    {
        $result = Median($input);
        $operationSymbol = " and ";
        //$sentence = "The median of ";
    }
   
    else
    {
        print ("Please input a valid operation type as a value, 1 though 7.");
    }

    //pretty print result 
    global string $sentence;
    $sentence = "The result of ";
    $sentence += (floatArrayToString($input, $operationSymbol));
    $sentence += " = " + $result + "\n";
    print ($sentence);
    return ($result);
}
}
//Calculator({1, 0, 2}, 6);


global proc calcButtonCommand()
{ 
    global string $userInput;
    global int $indexValue = 0;

    global float $enterValue[];
    $enterValue[$indexValue] = (float)$userInput;

    $userInput = "";

    $indexValue++;

    print ($enterValue);

}

global proc onepress()
{
    global string $userInput;
    $userInput += "1";
    print ($userInput + "\n");
}

global proc twopress()
{
    global string $userInput;
    $userInput += "2";
    print ($userInput + "\n");
}

global proc threepress()
{
    global string $userInput;
    $userInput += "3";
    print ($userInput + "\n");    
}

global proc fourpress()
{
    global string $userInput;
    $userInput += "4";
    print ($userInput + "\n");
}

global proc fivepress()
{
    global string $userInput;
    $userInput += "5";
    print ($userInput + "\n");
}

global proc sixpress()
{
    global string $userInput;
    $userInput += "6";
    print ($userInput + "\n");
}

global proc sevenpress()
{
    global string $userInput;
    $userInput += "7";
    print ($userInput + "\n");
}

global proc eightpress()
{
    global string $userInput;
    $userInput += "8";
    print ($userInput + "\n");
}

global proc ninepress()
{
    global string $userInput;
    $userInput += "9";
    print ($userInput + "\n");
}

global proc zeropress()
{
    global string $userInput;
    $userInput += "0";
    print ($userInput + "\n");
}

global proc decpress()
{
    global string $userInput;
    $userInput += ".";
    print ($userInput + "\n");
}

global proc clearpress()
{
    global int $indexValue;
    global float $enterValue[];
    global string $userInput;
    $userInput = "";
    $indexValue = 0;
    clear $enterValue;
    print ($userInput + "\n");
}

global proc printoutUI()
{
global string $sentence;
//$sentence = textField;

//print ($sentence);
}

global proc CalculatorUI()
{
    global string $userInput;

    string $calcWindow = "calcWindow";

    if(`window -exists $calcWindow`)
    deleteUI $calcWindow;

    printoutUI();

$calcWindow = `window
                    -title "Calculator"
                    -widthHeight 200 200
                    -resizeToFitChildren 1
                    $calcWindow`;

string $mainColumn = `columnLayout 
                        -parent $calcWindow
                        -adjustableColumn 1`;

string $GridNumbers = `gridLayout
                            -cellHeight 75
                            -cellWidth 75
                            -numberOfColumns 5
                            -numberOfRows 4
                            -parent $calcWindow`;

optionVar
    -stringValue "printoutUI" `textField
    -parent $mainColumn
    -height 50
    -editable 0`;

button
    -parent $GridNumbers
    -label "1"
    -command "onepress";

button
    -parent $GridNumbers
    -label "2"
    -command "twopress";

button
    -parent $GridNumbers
    -label "3"
    -command "threepress";

button
    -parent $GridNumbers
    -label "4"
    -command "fourpress";

button
    -parent $GridNumbers
    -label "5"
    -command "fivepress";

button
    -parent $GridNumbers
    -label "6"
    -command "sixpress";

button
    -parent $GridNumbers
    -label "7"
    -command "sevenpress";

button
    -parent $GridNumbers
    -label "8"
    -command "eightpress";

button
    -parent $GridNumbers
    -label "9"
    -command "ninepress";

button
    -parent $GridNumbers
    -label "0"
    -command "zeropress";

button
    -parent $GridNumbers
    -label "."
    -command "decpress";

button 
    -parent $GridNumbers
    -label "+"
    -command "Calculator($enterValue, 1)";

button 
    -parent $GridNumbers
    -label "-"
    -command "Calculator($enterValue, 2)";

button 
    -parent $GridNumbers
    -label "*"
    -command "Calculator($enterValue, 3)";

button 
    -parent $GridNumbers
    -label "/"
    -command "Calculator($enterValue, 4)";

button 
    -parent $GridNumbers
    -label "^"
    -command "Calculator($enterValue, 5)";

button 
    -parent $GridNumbers
    -label "Mode"
    -command "Calculator($enterValue, 6)";

button 
    -parent $GridNumbers
    -label "Median"
    -command "Calculator($enterValue, 7)";

button
    -parent $GridNumbers
    -label "Enter"
    -command "calcButtonCommand";

button
    -parent $GridNumbers
    -label "Clear"
    -command "clearpress";

showWindow $calcWindow;
}

CalculatorUI();